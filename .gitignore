# Node.js dependencies
# Ignore node_modules folders within both frontend and backend
frontend/node_modules/
backend/node_modules/
node_modules/

# Dependency lock files (as per your request, NOT to be pushed)
# NOTE: It is generally recommended practice to commit `package-lock.json` and `yarn.lock`
#       files to ensure consistent dependency installations across different environments.
#       If you choose to ignore them, future `npm install` runs might pull
#       slightly different dependency versions based on semantic versioning rules.
frontend/yarn.lock # Uncomment if you use yarn in frontend
backend/yarn.lock # Uncomment if you use yarn in backend

# Environment variables
# These contain sensitive information and should NEVER be pushed to source control.
.env                      # Catches .env files directly at root or backend/
frontend/.env             # Explicitly for frontend's .env if it has one
frontend/.env.local       # Create React App specific local environment files
frontend/.env.development.local # CRA development local env
frontend/.env.test.local  # CRA test local env
frontend/.env.production.local # CRA production local env

# Build and Distribution folders
frontend/package-lock.json
backend/package-lock.json
# Frontend production build output
frontend/build/

# Backend TypeScript compiled JavaScript output
backend/dist/

# Logs
*.log
npm-debug.log*
yarn-debug.log*
npm-error.log*

# OS-specific files
.DS_Store          # macOS directory service file
Thumbs.db          # Windows thumbnail cache
.localized         # macOS localization file

# IDE specific files (e.g., VS Code workspace settings, IntelliJ IDEA files)
# You can remove these if you want to share specific IDE settings with team members.
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Temporary files and caches
.cache/            # General cache directories
frontend/.cache/   # Specific frontend cache
frontend/.parcel-cache/ # If Parcel bundler is used
frontend/.next/         # If Next.js is used